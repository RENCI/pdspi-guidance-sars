openapi: 3.0.0
# Added by API Auto Mocking Plugin
info:
  description: SARS guidance plugin
  version: "4"
  title: Guidance plugin
  contact:
    email: txscience@lists.renci.org
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /config:
    get:
      summary: returns the config for the guidance plugin
      operationId: api.get_config
      responses:
        '200':
          description: config
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
              example:
                {
                    "title": "SARS guidance",
                    "piid": "pdspi-guidance-sars-treatment",
                    "pluginType": "g",
                    "pluginSelectors": [ {
                        "title": "SARS",
                        "id": "PDS:sars",
                        "selectorValue": {
                            "value": "PDS:sars:treatment",
                            "title": "Treatment"
                        }
                    },
                    {
                        "title": "SARS",
                        "id": "PDS:sars",
                        "selectorValue": {
                            "value": "PDS:sars:resource",
                            "title": "Resource" }
                    } ],
                    "pluginParameterDefaults": [ {
                        "id": "pdspi-guidance-sars:loc",
                        "title": "Hospital location (State)",
                        "parameterDescription": "Please choose a state to indicate the hospital location for which you would like to get triage guidance.",
                        "parameterValue": { "value": "NC" },
                        "legalValues": {
                            "type": "string",
                            "enum": [ "NC", "NY", "PA", "SC", "VA"] }
                    } ],
                    "requiredPatientVariables": [ {
                        "id": "LOINC:30525-0",
                        "title": "Age",
                        "legalValues": { "type": "number", "minimum": "0" },
                        "why": "Age is used to assess patient risk for SARS."
                    },
                    {
                        "id": "LOINC:21840-4",
                        "title": "Sex",
                        "legalValues": { "type": "string" },
                        "why": "Sex is used to assess patient risk for SARS."
                    },
                    {
                        "id": "LOINC:39156-5",
                        "title": "BMI",
                        "legalValues": { "type": "number", "minimum": "0" },
                        "why": "BMI is used to assess patient risk for SARS."
                    },
                    {
                      "id": "LOINC:45701-0",
                      "title": "Fever",
                      "legalValues": { "type": "boolean"},
                      "why": "Fever is one major symptom of SARS"
                    },
                    {
                      "id": "LOINC:64145-6",
                      "title": "Cough",
                      "legalValues": { "type": "boolean"},
                      "why": "Cough is one major symptom of SARS"
                    },
                    {
                      "id": "LOINC:54564-0",
                      "title": "Shortness of breath",
                      "legalValues": { "type": "boolean"},
                      "why": "Shortness of breath is one major symptom of SARS"
                    } ]
                }
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                    example: [  {
                      "timestamp": "2019-09-20T00:00:01Z",
                      "event": "Unknown query parameters",
                      "source": "client",
                      "level": 4,
                      "action": "Ignoring query parameters"
                      } ]
                  config:
                    $ref: '#/components/schemas/Config'
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                    example: [  {
                      "timestamp": "2019-09-20T00:00:01Z",
                      "event": "Not a guidance plugin type, [m] for [pdspi-guidance-sars].",
                      "source": "admin user",
                      "level": 1,
                      "action": "Changed plugin from [m] type to 'g'[pdspi-guidance-sars] and returning config as-is otherwise"
                      } ]
                  configs:
                    $ref: '#/components/schemas/Config'
  /guidance:
    post:
      summary: Given a patient ID and a plugin id, return the guidance
      operationId: api.get_guidance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuidanceInputs'
            example:
              { "piid": "pdspi-guidance-sars-treatment",
              "ptid": "38",
              "timestamp": "2020-04-03T13:41:09.942+00:00",
              "pluginParameterValues": [ {
                  "id": "pdspi-guidance-sars:loc",
                  "title": "Hospital location (State)",
                  "parameterDescription": "Please choose a state to indicate the hospital location for which you would like to get triage guidance.",
                  "parameterValue": { "value": "NC" }
                } ],
              "userSuppliedPatientVariables": [ {
                  "id": "LOINC:30525-0",
                  "title": "Age",
                  "variableValue": {
                    "value": "0.5",
                    "units": "years"
                  },
                  "how": "The value was specified by the end user.",
                  "timestamp": "2020-04-03T13:41:09.942+00:00"
                }, {
                    "id": "LOINC:21840-4",
                    "title": "Sex",
                    "variableValue": {
                      "value": "female"
                    },
                    "how": "The value was specified by the end user.",
                    "timestamp": "2020-04-03T13:41:09.942+00:00"
                  },
                  {
                      "id": "LOINC:39156-5",
                      "title": "BMI",
                      "variableValue": {
                        "value": "23.2"
                      },
                      "how": "The value was specified by the end user.",
                      "timestamp": "2020-04-03T13:41:09.942+00:00"
                  },
                  {
                    "id": "LOINC:45701-0",
                    "title": "Fever",
                    "variableValue": {
                      "value": true
                    },
                    "how": "The value was specified by the end user.",
                    "timestamp": "2020-04-03T13:41:09.942+00:00"
                  },
                  {
                    "id": "LOINC:64145-6",
                    "title": "Cough",
                    "variableValue": {
                      "value": true
                    },
                    "how": "The value was specified by the end user.",
                    "timestamp": "2020-04-03T13:41:09.942+00:00"
                  },
                  {
                    "id": "LOINC:54564-0",
                    "title": "Shortness of breath",
                    "variableValue": {
                      "value": true
                    },
                    "how": "The value was specified by the end user.",
                    "timestamp": "2020-04-03T13:41:09.942+00:00"
                  }
              ]  }
      responses:
        '200':
          description: "Guidance matching query"
          content: 
            application/json:
              schema:
                  $ref: '#/components/schemas/Guidance'
        '400':
          description: "Bad Request"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                    example: [  {
                      "timestamp": "2019-09-20T00:00:01Z",
                      "event": "Missing patient variable[LOINC:30525-0]",
                      "source": "pdspi-mapper-example",
                      "level": 3,
                      "action": "Called plugin with missing values [pdspi-guidance-sars]"
                      },
                      {
                      "timestamp": "2019-09-20T00:00:02Z",
                      "event": "Missing patient variable[LOINC:30525-0]",
                      "source": "pdspi-guidance-sars",
                      "level": 3,
                      "action": "Set LOINC:30525-0='85' for most conservative guidance"
                      }]
                  guidance:
                    $ref: '#/components/schemas/Guidance'
        '500':
          description: "Internal Server Error"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                    example: [  {
                      "timestamp": "2019-09-20T00:00:01Z",
                      "event": "Guidance plugin results did not pass JSON validator:[{\"valuE\": \"5\"}]",
                      "source": "pdspi-guidance-sars",
                      "level": 3,
                      "action": "Correction attempted: 'valuE' to 'value'."
                      }]
                  guidance:
                    $ref: '#/components/schemas/Guidance'
components:
  schemas:
    Message:
      description: "This schema mirrors the 'Log' schema from tx-logging (see github.com/RENCI/tx-logging)."
      type: object
      required:
        - timestamp
        - event
        - source
        - level
      properties:
        -id:
          not: {}
        timestamp:
          type: string
          format: date-time
          example: "2019-09-20T00:00:00Z"
        event:
          type: string
          example: "The specified mapper (pdspi-mapper-example) is not compatible with the specified FHIR server (pdspi-fhir-hapi)."
        source:
          type: string
          example: "admin user"
        level:
          description: "The level value mirrors syslog values, as follows: 1 - alert, 'immediate action is needed' : e.g., the data will be returned, but PDS picked a mapper/server at random because no default was selected; 2 - critical: this could indicate resources are nearing full, or similar; 3 - error: something unexpected happened, PDS tried to correct for it, but the admin should be alerted; 4 - warning: PDS had to correct something unexpectedly but all is well; 5 - notification, 'Normal but significant condition': a dashboard might chose to render this message in a special console box; 6 - informational: same as above, but for auditing; 7 - debugging: maybe the dashboard has an optional debugging console box for handling debug messages."
          type: integer
          enum: [1,2,3,4,5,6,7]
          example: 1
        action:
          type: string
          example: "Arbitrarily chose this FHIR server from those available: (pdspi-fhir-example). Only one FHIR server is available that is also compatible with pdspi-mapper-example"
    PatientVariableValue:
      type: object
      required:
        - id
        - variableValue
        - how
      properties:
        id:
          type: string
          description: "The id for one of the patient variables supported by this PDS version. If the client does not recognize this id, it should 1) log a warning, 2) not solicit user input for the id, 3) attempt to render the value, and 4) attempt to render the 'how' and 'why' for this unknown variable in the justification section of the client interface, assuming there is one."
          example: "LOINC:30525-0"
        title:
          type: string
          description: "A non-standardized, human-readable string to describe the patient variable indicated by this id. The 'title' may be implemented by the PDS to aid in debugging, and clients should not depend on this value. The client should have prior knowledge of the supported patient variables, and thus should provide it's own human-readable titles for representation on any end-user interfaces in the appropriate language."
          example: "Age"
        variableValue:
          type: object
          description: "The patient variable id maps to only one RequiredPatientVariable, which in turn, defines all the legal values (legalValues) for this id. The legalValues defines the type for the variableValue, and so can be used to inform the client on how to render the variableValue. The client can find the type by calling the '/config' endpoint, matching the 'id' with that in the 'RequiredPatientVariable' schema, and looking up 'legalValues'. The variableValue may also include the 'units' field, which is optional, and if left off, implies the system default units. NOTE: The 'variableValue' is actually an object type, but we use 'string' here to overcome a shortcoming of the swagger ui. This design choice was made in order to prioritize a better interactive documentation experience for the API user."
          example: {"value": "0.5", "units": "years"}
        certitude:
          type: integer
          description: "The certitude of the value, 0 not certain, 1 somewhat certain, 2 certain. Defaults to 0, if absent"
          example: 2
        how:
          type: string
          description: "A value such as 'The value was specified by the end user.' indicates that any value in the EHR has been overriden by the client via the input values to the endpoint, and they will be simply passed back here."
          example: "The value was specified by the end user."
        timestamp:
          description: "If absent, defaults to current time."
          type: string
          format: date-time
          example: "2019-12-03T13:41:09.942+00:00"
    Config:
      type: object
      required:
        - piid
        - pluginType
        - requiredPatientVariables
      properties:
        title:
          type: string
          description: "Meaningful name for this plugin"
          example: "SARS guidance"
        piid:
          type: string
          description: "A string, unique to this deployment, used to identify this plugin in realtime"
          example: "pdspi-guidance-sars-treatment"
        pluginType:
          type: string
          enum: [e,g,m,mD,f,fD]
          description: "A value from the enumeration below identifying the plugin type. 'g'=Guidance, 'c'=convenience, 'm'=mapper, 'f'=FHIR data server, 'mD'= default mapper, 'fD'=default FHIR server. In the clinical arena, only one FHIR server and only one mapper is allowed, and this can be indicated either with the defaults, or by only installing one mapper and one FHIR plugin type."
          example: "g"
        pluginTypeTitle:
          type: string
          description: "A human-readable value for the type. 'g'=Guidance, 'c'=Convenience, 'm'=Mapping, 'f'=FHIR, 'mD'=Default Mapping plugin, 'fD'=Default FHIR plugin"
        pluginDependencies:
          type: array
          items:
            type: string
            description: "An array of container names upon which the plugin in question depends. For example, 'txscience/pds-fhir-example:0.2.0'. Mapper plugins must indicate a dependency on one or more FHIR plugins, but dependencies are discouraged otherwise in order to maintain the decoupling and reuse of plugins. Every plugin of type 'm' and 'mD' must have at least one 'f' or 'fD' plugin listed in pluginDependencies, otherwise return 500."
        pluginSelectors:
          description: "Maps the piid to a set of selector values. Optionally call the /selectors endpoint first to get the full list of available selectors and their legal values. For example, two selectors might be 1. drug type and 2. indication. If the client selects values for the selector that matches all piid selector values, then this plugin can provide guidance. Potentially, a decision tree could be implemented here by prefacing each selectorarray item with logic, but for this API version we will instead always AND all the selector array elements. For example, 'if guidance is requried for drug _x_ AND indication _y_ then use plugin _z_'."
          type: array
          items:
            $ref: '#/components/schemas/Selector'
        pluginParameterDefaults:
          description: "Default, typed values for any parameters that might be required by the plugin"
          type: array
          items:
            $ref: '#/components/schemas/PluginParameter'
        requiredPatientVariables:
          type: array
          items:
            $ref: '#/components/schemas/RequiredPatientVariable'
    PluginParameter:
      type: object
      required:
        - id
        - parameterValue
      properties:
        id:
          type: string
          description: "The id for one of the parameters used by the plugin in question. Parameters are completely defined by the plugin and need not be interchangable with other plugins. The client will have no prior knowledge for plugin parameters."
          example: "pdspi-guidance-sars:1"
        title: 
          type: string
          description: "A non-standardized, human-readable string to describe the id. May be implemented by the PDS to aid in debugging, clients should not depend on this value."
          example: "Hospital location"
        parameterDescription:
          type: string
          description: "Description provided by the plugin. The plugin, not the client, is therefore responsible for converting the descriptions to the appropriate language based on internationalization and personalization preferences."
          example: "Please choose a state to indicate the hospital location for which you would like to get triage guidance."
        parameterValue:
          type: object
          description: "The actual value of the parameter. NOTE: This value is actually an object type, but we use 'string' here to overcome a shortcoming of the swagger ui. This design choice was made in order to prioritize a better interactive documentation experience for the API user."
          example: {"value": "NC"}
        legalValues:
          type: string
          description: "The 'legalValues' will always be present in the '/config' endpoint response and need not be provided to or from the client in the '/guidance' endpoint call. Use the JSON schema, https://json-schema.org/draft/2019-09/json-schema-validation.html. For example, { type: 'string', 'enum': [ 'Gentamicin', 'Amikacin' ] } to define an enumeration,  { 'type': 'number' } for a float, and { 'type': 'number', 'minimum': '0' } for a positive number, and { 'type': 'integer' } for an integer. NOTE: This value is actually an object type, but we use 'string' here to overcome a shortcoming of the swagger ui. This design choice was made in order to prioritize a better interactive documentation experience for the API user. "
          example: { "type": "string", "enum": ["NC", "SC", "VA", "NY"] }
    RequiredPatientVariable:
      type: object
      required:
        - id
        - legalValues
        - why
      properties:
        id:
          type: string
          description: "The id for one of the patient variables supported by this PDS version. The client has the option of ignoring this variable if it doesn't recognize the id."
          example: "LOINC:30525-0"
        title:
          type: string
          description: "A non-standardized, human-readable string to describe the id. May be implemented by the PDS to aid in debugging, clients should not depend on this value. NOTE: This value is actually an object type, but we use 'string' here to overcome a shortcoming of the swagger ui. This design choice was made in order to prioritize a better interactive documentation experience for the API user."
          example: "Age"
        legalValues:
          type: string
          description: "If absent, all values are legal, so treat the value like a string. Use the JSON schema, https://json-schema.org/draft/2019-09/json-schema-validation.html. For example, { type: 'string', 'enum': [ 'Gentamicin', 'Amikacin' ] } to define an enumeration,  { 'type': 'number' } for a float, and { 'type': 'number', 'minimum': '0' } for a positive number, and { 'type': 'integer' } for an integer. The client should have prior knowledge of the supported patient variables, and thus should provide it's own human-readable titles for representation on any end-user interfaces in the appropriate language. NOTE: This value is actually an object type, but we use 'string' here to overcome a shortcoming of the swagger ui. This design choice was made in order to prioritize a better interactive documentation experience for the API user. "
          example: { "type": "number", "minimum": "0" }
        why:
          type: string
          description: "Provides the client with a human-readable, non-standard justification for why the plugin needs this particular variable. This can be rendered by the client to provide the end-user with rationale for the patient values, but does not address how the value was computed."
          example: "Age is used to assess patient risk for SARS"
    Selector:
      description: "Used for selecting plugins"
      type: object
      required:
        - id
      properties:
        title:
          type: string
          example: "Drug"
          description: "Human-readable name for this selector type."
        id:
          type: string
          description: "The client should have prior knowledge of the full list of selectors available with this version of the PDS. This id is used to determine which selector type is described."
          example: "dosing.rxCUI"
        selectorValue:
          type: object
          description: "Unique identifier for this type. Stylistically, community standard coding system used for this type will preface the code used, e.g., rxCUI:1596450. If no standard exists 'PDS:<id>' will be used. The 'title' property illustrated in the example is optional and might be used by the PDS for debugging purposes. NOTE: This value is actually an object type, but we use 'string' here to overcome a shortcoming of the swagger ui. This design choice was made in order to prioritize a better interactive documentation experience for the API user. "
          example: {"value": "rxCUI:1596450", "title": "Gentamicin"}
        legalValues:
          type: string
          description: "If absent, all values are legal, so treat the value like a string. Use the JSON schema, https://json-schema.org/draft/2019-09/json-schema-validation.html. For example, { type: 'string', 'enum': [ 'Gentamicin', 'Amikacin' ] } to define an enumeration,  { 'type': 'number' } for a float, and { 'type': 'number', 'minimum': '0' } for a positive number, and { 'type': 'integer' } for an integer. Furthermore, a non-standard 'title' can be added in support of a human-readable string for the type's value. This maybe be implemented by the PDS to aid in debugging, however clients should not depend on this value. NOTE: This value is actually an object type, but we use 'string' here to overcome a shortcoming of the swagger ui. This design choice was made in order to prioritize a better interactive documentation experience for the API user."
          example: { "type": "string", "enum": [{"value": "rxCUI:1596450", "title": "Gentamicin"},{"value": "rxCUI:1114195"},{"value": "rxCUI:1546356"},{"value": "rxCUI:1364430"},{"value": "rxCUI:1599538"},{"value": "rxCUI:1927851"}] }
    GuidanceInputs:
      type: object
      required:
        - piid
      properties:
        piid:
          type: string
          example: "pdspi-guidance-sars"
          description: "Uniquely identifies the enabled and installed plugin to use for retrieving guidance"
        txid:
          description: "A unique id that the client is ue to track this transaction. If specified, it will be returned in the Guidance, if not specified, a unique ID will be created."  
          type: string
          example: "38-1"
        timeout:
          type: integer
          description: "Number of milliseconds until time out. Factory system default should be 120000 (2 minutes) for RUO applictions, and only 500ms for clinical."
        timestamp:
          description: "If not specified, use current time"
          type: string
          format: date-time
          example: "2019-12-03T13:41:09.942+00:00"
        pluginParameterValues:
          description: "User-supplied parameter values to override plugin defaults"
          type: array
          items:
            $ref: '#/components/schemas/PluginParameter'
        userSuppliedPatientVariables:
          description: "User-supplied patient values to override EHR values, and/or replace values missing in the EHR"
          type: array
          items:
            $ref: '#/components/schemas/PatientVariableValue'
          example:  [ {
              "id": "LOINC:30525-0",
              "title": "Age",
              "variableValue": {
                "value": ".5",
                "units": "years"
              },
              "how": "The value was specified by the end user.",
              "timestamp": "2019-12-03T13:41:09.942+00:00"
            } ]
    Guidance:
      description: "Returns guidance, justification, visualization data and data type, as well as cds-hooks compatible formats for direct integration with the EHR."
      type: object
      required:
        - txid
        - justification
        - cards
      properties:
        piid:
          description: "A string, unique to this deployment, used to identify this plugin in realtime"
          type: string
          example: "pdspi-aminoglycoside-nomogram"
        title:
          description: "An optional title for the guidance plugin"
          type: string
          example: "Aminoglycoside dosing guidance"
        txid:
          type: string
          description: "The transaction id sent in the GuidanceInputs. If none were sent, a unique id will be created and sent back here."
          example: "38-1"
        justification:
          description: "Lists patient variables that were used and how they were computed and why they were needed. Justification informs expert user on whether or not to trust this guidance. Justification is provided both by the guidance plugin, which describes 'why' it needs each patient variable, and by the mapper plugin, which describes 'how' each patient variable was derived."
          type: object
          properties:
            inputs:
              description: provide justifications for inputs related to patient variables
              type: array
              items:
                type: object
                required:
                  - id
                  - how
                  - why
                  - variableValue
                properties:
                  id:
                    description: "The id for one of the patient variables supported by this PDS version. If the client does not recognize this id, it should 1) log a warning, 2) not solicit user input for the id, 3) attempt to render the value, and 4) attempt to render the 'how' and 'why' for this unknown variable in the justification section of the client interface, assuming there is one."
                    type: string
                    example: "LOINC:30525-0"
                  title:
                    description: "A non-standardized, human-readable string to describe the patient variable indicated by this id. The 'title' may be implemented by the PDS to aid in debugging, and clients should not depend on this value. The client should have prior knowledge of the supported patient variables, and thus should provide it's own human-readable titles for representation on any end-user interfaces in the appropriate language."
                    type: string
                    example: "Age"
                  how:
                    description: "A value such as 'The value was specified by the end user.' indicates that any value in the EHR has been overriden by the client via the input values to the endpoint, and they will be simply passed back here."
                    type: string
                    example: "The value was specified by the end user."
                  why:
                    description: "Provides the client with a human-readable, non-standard justification for why the plugin needs this particular variable. This can be rendered by the client to provide the end-user with rationale for the patient values, but does not address how the value was computed."
                    type: string
                    example: "Age is used to calculate the creatinine clearance. Dosing is lower for geriatric patient and contraindicated for pediatric patients"
                  variableValue:
                    description: "The justification id maps to only one PatientVariable, which in turn, defines all the legal values (legalValues) for this id. The legalValues define the type for the variableValue, and so can be used to inform the client on how to render the variableValue. The legalValues field here is optional, so the client can find the type by calling the '/config' endpoint, matching the 'id' with that in this justification schema, and looking up 'legalValues'. The variableValue may also include the 'units' field, which is optional, and if left off, implies the system default units. NOTE: The 'variableValue' is actually an object type, but we use 'string' here to overcome a shortcoming of the swagger ui. This design choice was made in order to prioritize a better interactive documentation experience for the API user."
                    type: object
                    example: {"value": "0.5", "units": "years"}
                  legalValues:
                    description: "The 'legalValues' will always be present in the '/config' endpoint response and need not be provided to or from the client in the '/guidance' endpoint call. Use the JSON schema, https://json-schema.org/draft/2019-09/json-schema-validation.html. For example, { type: 'string', 'enum': [ 'Gentamicin', 'Amikacin' ] } to define an enumeration,  { 'type': 'number' } for a float, and { 'type': 'number', 'minimum': '0' } for a positive number, and { 'type': 'integer' } for an integer. NOTE: This value is actually an object type, but we use 'string' here to overcome a shortcoming of the swagger ui. This design choice was made in order to prioritize a better interactive documentation experience for the API user. "
                    type: string
                    example: {"type": "number", "minimum": "0"}
                  timestamp:
                    type: string
                    format: date-time
                    description: "If not specified, assume current time"
            outputs:
              type: array
              items:
                $ref: '#/components/schemas/Output'
        cards:
          type: array
          items:
            $ref: '#/components/schemas/Card'
    Card:
      type: object
      required:
        - id
        - summary
        - indicator
        - source
      properties:
        id: 
          type: string
        title:
          type: string
        summary:
          type: string
          description: "cds-hooks: <140-character summary sentence for display to the user inside of this card"
          example: "some <140 char Summary Message"
        detail:
          type: string
          description: "cds-hooks: - optional detailed information to display (GitHub Flavored Markdown)"
          example: "some sort of optional GitHub Markdown details"
        indicator:
          type: string
          description: " urgency/importance of what this card conveys (info/warning/critical)"
          example: "info"
        source:
          $ref: "#/components/schemas/Source"
        suggestions:
          type: array
          items:
            $ref: '#/components/schemas/Suggestion'
        selectionBehavior:
          type: string
          description: " intended behavior of the suggestions. If suggestions present, value must be at-most-one"
        links: 
          type: array
          items:
            $ref: '#/components/schemas/Link'
    Output:
      type: object
      required:
        - id
        - name
        - data
        - specs
      properties:
        id:
          type: string
          example: "oid-1"
        name:
          type: string
          example: "Time-series data"
        description:
          type: string
          example: "Information about time-series data"
        data:
          type: array
          description: "data to be visualized"
          items:
            type: object
        specs:
          type: array
          description: "Vega-lite spec used for guidance visualization"
          items:
            $ref: '#/components/schemas/Spec'
    Spec:
      type: object
      required:
        - title
        - data
      properties:
        $schema:
          type: string
          description: "URL to JSON schema for a vega-lite specification"
          example: "https://vega.github.io/schema/vega-lite/v4.json"
        title:
          type: string
          description: "title for the plot"
          example: "Line chart"
        description:
          type: string
          example: "Time-series line chart"
        width:
          type: string
          example: "container"
        height:
          type: string
          example: "container"
        autosize:
          type: object
          properties:
            resize:
              type: boolean
              example: true
        data:
          type: object
          description: "An object describing the data source"
          properties:
            name:
              type: string
              description: "Provide a placeholder name and bind data at runtime"
              example: "data"
        mark:
          type: string
          description: "type of the mark which is the basic visual building block of a visualization"
          example: "line"
        encoding:
          type: object
          description: "visualization encodings"
          properties:
            x:
              type: object
              description: "visualization encodings for x axis"
              properties:
                bin:
                  type: boolean
                  description: "whether to aggregate data into bins"
                  example: true
                field:
                  type: string
                  description: "the field name in data to bind to x axis at runtime"
                  example: "x"
                type:
                  type: string
                  description: "type of the data field to bind for visualization"
                  example: "quantitative"
                axis:
                  type: object
                  description: "specify axis properties, e.g., title of the axis"
                  properties:
                    title:
                      type: string
                      example: "x axis"
            y:
              type: object
              description: "visualization encodings for y axis"
              properties:
                aggregate:
                  type: string
                  description: "the field name in data to aggregate and bind to y axis at run time"
                  example: "count"
                field:
                  type: string
                  description: "the field name in data to bind to y axis at runtime"
                  example: "y"
                type:
                  type: string
                  description: "type of the data field to bind for visualization"
                  example: "quantitative"
                axis:
                  type: object
                  description: "specify axis properties, e.g., title of the axis"
                  properties:
                    title:
                      type: string
                      example: "y axis"
            color:
              type: object
              description: "visualization encodings for color"
              properties:
                field:
                  type: string
                  description: "the field name in data to bind to color at runtime"
                  example: "group"
                type:
                  type: string
                  description: "type of the data field to bind for visualization"
                  example: "nominal"
    Source:
      type: object
      required:
        - label
      properties:
        label:
          type: string
          description: "short, human-readable label to display source of the card’s information"
          example: Human-readable source label
        url:
          type: string
          description: "optional absolute URL to load to learn more about the organization or data set"
          example: "https://example.com"
        icon:
          type: string
          description: " absolute url for an icon for the source of this card (100x100 pixel PNG without any transparent regions)"
          example: "https://example.com/img/icon-100px.png"
    Suggestion:
      type: object
      required:
        - label
      properties:
        uuid:
          type: string
          description: "unique identifier for auditing and logging suggestions"
          example: e1187895-ad57-4ff7-a1f1-ccf954b2fe46
        label:
          type: string
          description: "human-readable label to display for this suggestion"
          example: "Human-readable suggestion label"
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
    Action:
      type: object
      required:
        - type
        - description
      properties:
        title:
          type: string
        id:
          type: string
        type:
          type: string
          description: "type of action being performed (create/update/delete)"
          example: "create"
        description:
          type: string
          description: "human-readable description of the suggested action"
          example: "Create a prescription for Acetaminophen 250 MG"
        resource:
          type: string
          description: "FHIR resource to create/update or id of resource to delete"
          example: "MedicationRequest"
    Link:
      type: object
      required:
        - label
        - url
        - type
      properties:
        label:
          type: string
          description: "human-readable label to display"
          example: "SMART Example App"
        url:
          type: string
          description: "URL to GET when link is clicked"
        type:
          type: string
          description: "type of the given URL (absolute/smart) "
        appContext:
          type: string
          description: "additional context to share with a linked SMART app"
